- content_for :extra_javascript do
  :javascript
    var languageKeys = _.map(#{all_locales.to_json}, function(locale) {
      return "admin.communities.available_languages." + locale["locale_key"];
    });
    ST.loadTranslations(languageKeys);
    var selectize = $('#locale-selection').selectize({plugins: ['remove_button'], items: #{enabled_locale_keys.to_json.html_safe}})[0].selectize;
    selectize.on("change", function(value) {
      defaultLanguage = value ? selectize.options[value[0]].text.trim() : "None";
      $(".selected-default-language-name").text(defaultLanguage);
    });
%div.locale-selection
  .input-header
    Enabled languages
  .info-text-container
    .info-text-icon
      %i.icon-info-sign
    .info-text-content
      %p
        Languages to be used nönönö
  .row.col-10
    %select.locale-selection__input-widget{ multiple: true, name: "enabled_locales[]", id: "locale-selection" }
      - all_locales.each do |locale|
        %option{ value: locale[:locale_key] }
          = t("admin.communities.available_languages.#{locale[:locale_key]}")
  %p#selected-default-language{ style: "clear: both;" }
    Default language:
    %span.selected-default-language-name
      = t("admin.communities.available_languages.#{enabled_locale_keys.first}")
.clearfix{ style: "width: 100%;" }